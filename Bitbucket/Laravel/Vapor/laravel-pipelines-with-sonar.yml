image: laravelphp/vapor:php80

clone:
  depth: full

definitions:
  caches:
    composer: vendor
    sonar: ~/.sonar/cache
    node: node_modules
  services:
    mysql:
      image: mysql:5.7
      environment:
        MYSQL_DATABASE: "database_name"
        MYSQL_ROOT_PASSWORD: "admin"
        MYSQL_USER: "database-user"
        MYSQL_PASSWORD: "database-password"
    docker:
      memory: 2048

  steps:
    - step: &code-checking
        name: Lint and CS check
        script:
          - export COMPOSER_AUTH="{\"bitbucket-oauth\":{\"bitbucket.org\":{\"consumer-key\":\"$BITBUCKET_CONSUMER_KEY\",\"consumer-secret\":\"$BITBUCKET_CONSUMER_SECRET\"}}}"
          - apk add --update nodejs nodejs-npm
          - npm install --no-interaction && npm run lint-check
          - composer install --no-interaction
          - composer php-cs-check
        caches:
          - composer
          - node
    - step: &parallel-feature-test
        name: Run feature tests
        artifacts:
          - tests/coverage/covs/feature.cov
        script:
          - cp .env.pipelines .env.testing
          - composer config github-oauth.github.com $GITHUB_TOKEN
          - php -d pcov.enabled=1 -d pcov.directory=. -d pcov.exclude="~vendor~"
          - php artisan test --parallel --testsuite=Feature --stop-on-failure --coverage-php ./tests/coverage/covs/feature.cov
        services:
          - mysql
        caches:
          - composer
    - step: &parallel-unit-test
        name: Run unit tests
        artifacts:
          - tests/coverage/covs/unit.cov
        script:
          - cp .env.pipelines .env.testing
          - composer config github-oauth.github.com $GITHUB_TOKEN
          - php -d pcov.enabled=1 -d pcov.directory=. -d pcov.exclude="~vendor~"
          - php artisan test --parallel --testsuite=Unit --runner=WrapperRunner --stop-on-failure --coverage-php ./tests/coverage/covs/unit.cov
        services:
          - mysql
        caches:
          - composer    
    - step: &sonarcloud-scan
        name: Analyze on SonarCloud merged coverage
        caches:
          - sonar
        script:
          - wget https://phar.phpunit.de/phpcov.phar
          - php phpcov.phar merge --clover ./tests/coverage/coverage.xml ./tests/coverage/covs
          - pipe: sonarsource/sonarcloud-scan:1.2.0
    - step: &sonarcloud-check-quality-gate
        name: Check the Quality Gate on SonarCloud
        caches:
          - sonar
        script:
          - pipe: sonarsource/sonarcloud-quality-gate:0.1.4
    - step: &deploy-serverless-develop
        name: Deploy serverless on develop
        deployment: vapor-develop
        services:
          - docker
        script:
          - export COMPOSER_AUTH="{\"bitbucket-oauth\":{\"bitbucket.org\":{\"consumer-key\":\"$BITBUCKET_CONSUMER_KEY\",\"consumer-secret\":\"$BITBUCKET_CONSUMER_SECRET\"}}}"
          - echo 'export NEWRELIC_LICENSE_KEY="'$NEWRELIC_LICENSE_KEY'" \nexport NEWRELIC_APP_NAME="'$NEWRELIC_APP_NAME'"' > .export
          - composer config github-oauth.github.com $GITHUB_TOKEN
          - composer install --no-interaction
          - COMMIT_MESSAGE=`git log --format=%B -n 1 ${BITBUCKET_COMMIT}`
          - echo "${BITBUCKET_COMMIT}" > VAR_BITBUCKET_COMMIT.txt
          - php artisan app-version:create --sha="$BITBUCKET_COMMIT" --time="$(date +%Y%m%d%H%I%S)" --branch="$BITBUCKET_BRANCH"
          - vendor/bin/vapor deploy develop --commit="${BITBUCKET_COMMIT}" --message="${COMMIT_MESSAGE}"    
    - step: &deploy-serverless-production
        name: Deploy serverless on production
        deployment: vapor-prod
        services:
          - docker
        trigger: manual
        script:
          - export COMPOSER_AUTH="{\"bitbucket-oauth\":{\"bitbucket.org\":{\"consumer-key\":\"$BITBUCKET_CONSUMER_KEY\",\"consumer-secret\":\"$BITBUCKET_CONSUMER_SECRET\"}}}"
          - echo 'export NEWRELIC_LICENSE_KEY="'$NEWRELIC_LICENSE_KEY'" \nexport NEWRELIC_APP_NAME="'$NEWRELIC_APP_NAME'"' > .export
          - composer config github-oauth.github.com $GITHUB_TOKEN
          - composer install --no-interaction
          - \cp -pf vapor.prod.yml vapor.yml
          - vendor/bin/vapor deploy production
pipelines:
  branches:
    develop:
      - step: *code-checking
      - parallel:
          - step: *parallel-feature-test
          - step: *parallel-unit-test
      - step: *sonarcloud-scan
      - step: *sonarcloud-check-quality-gate
      - step: *deploy-serverless-develop    
    master:
      - step: *code-checking
      - parallel:
          - step: *parallel-feature-test
          - step: *parallel-unit-test
      - step: *sonarcloud-scan
      - step: *sonarcloud-check-quality-gate
      - step: *deploy-serverless-production
  pull-requests:
    '**':
      - step: *code-checking
      - parallel:
          - step: *parallel-feature-test
          - step: *parallel-unit-test
      - step: *sonarcloud-scan
      - step: *sonarcloud-check-quality-gate
